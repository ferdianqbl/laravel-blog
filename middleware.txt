--> berjalan sebelum masuk ke fungsi2 di controller pada web.php

#CEK app\Http\kernel.php

protected $routeMiddleware = [
        'auth' => \App\Http\Middleware\Authenticate::class,
        'auth.basic' => \Illuminate\Auth\Middleware\AuthenticateWithBasicAuth::class,
        'auth.session' => \Illuminate\Session\Middleware\AuthenticateSession::class,
        'cache.headers' => \Illuminate\Http\Middleware\SetCacheHeaders::class,
        'can' => \Illuminate\Auth\Middleware\Authorize::class,
        'guest' => \App\Http\Middleware\RedirectIfAuthenticated::class,
        'password.confirm' => \Illuminate\Auth\Middleware\RequirePassword::class,
        'signed' => \Illuminate\Routing\Middleware\ValidateSignature::class,
        'throttle' => \Illuminate\Routing\Middleware\ThrottleRequests::class,
        'verified' => \Illuminate\Auth\Middleware\EnsureEmailIsVerified::class,
    ];

    auth -> digunakan untuk mengecek user sudah login atau blm, jika sudah, lolos middleware lanjut ke app
    guest -> digunakan untuk user yg blm login

    #Pengarahan selanjutnya setelah lolos di middleware diatur di app\Http\Providers\RouteServiceProvider.php   ==> default pengarahan ke halaman home

        lokasi pengarahan bisa diubah di file tsb


::: ketika pengecekan auth tidak berhasil, maka akan diarahkan ke halaman Route login. Bisa dilihat di app\middleware\authenticate.php. Sehingga dapat dilakukan penamaan Route yang mengarah ke login dengan Named route


### CONTROLLER
if(auth()->guest())     ==> return true if not login
if(auth()->auth())     ==> return true if login
if(auth()->check())     ==> return true if login
if(!auth()->check())     ==> return false if not login